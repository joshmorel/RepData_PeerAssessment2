setwd("\\grh200\jmorel$\rsas")
dir()
library(ggplot2)
library(dplyr)
setwd("C:/Users/jmorel/DataScience/RepData_PeerAssessment2")
storms <- read.csv("StormData.csv.bz2")
file.exists("StormData.csv.bz2")
!file.exists("StormData.csv.bz2")
if(file.exists("StormData.csv.bz2")) {1}
if(file.exists("StormData.csv.bz2")) {0}
if(file.exists("StormData.csv.bz2")) {1}
if(!file.exists("StormData.csv.bz2")) {1}
if(!file.exists("StormData.csv.bz2")) {1}
if(!file.exists("StormData.csv.bz2")) {1}
if(file.exists("StormData.csv.bz2")) {1}
if(!file.exists("StormData.csv.bz2")) {1}
if(not(file.exists("StormData.csv.bz2"))) {1}
if(not(file.exists("StormData.csv.bz2"))) 0
if(!(file.exists("StormData.csv.bz2"))) {1}
if(file.exists("StormData.csv.bz2")) {1}
!TRUE
!file.exists("StormData.csv.bz2")
if(!file.exists("StormData.csv.bz2")) {1}
if(!file.exists("StormData.csv.bz2")) download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2","StormData.csv.bz2")
if(!file.exists("StormData.csv.bz2")) download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2","StormData.csv.bz2")
storms2 <- select(storms,c(BGN_DATE,EVTYPE,FATALITIES,INJURIES,PROPDMG,PROPDMGEXP,CROPDMG,CROPDMGEXP))
storms2 <- mutate(storms2,event.year=format(strptime(BGN_DATE, "%m/%d/%Y"),"%Y"))
storms2 <- filter(storms2,event.year >= 2001)
storms2 <- mutate(storms2,crop.damage.dollars=ifelse(CROPDMGEXP=="B",CROPDMG*1000000000,ifelse(CROPDMGEXP=="M",CROPDMG*1000000,ifelse(CROPDMGEXP=="K",CROPDMG*1000,CROPDMG))))
storms2 <- mutate(storms2,property.damage.dollars=ifelse(PROPDMGEXP=="B",PROPDMG*1000000000,ifelse(PROPDMGEXP=="M",PROPDMG*1000000,ifelse(PROPDMGEXP=="K",PROPDMG*1000,PROPDMG))))
storms2 <- mutate(storms2,total.damage.dollars=property.damage.dollars+crop.damage.dollars)
storms2 <- filter(storms2,total.damage.dollars<100000000000)
ggplot(storm2,aes(x=EVTYPE,y=INJURIES)) + geom_boxplot()
ggplot(storms2,aes(x=EVTYPE,y=INJURIES)) + geom_boxplot()
View(arrange(storms2,desc(INJURIES)))
View(arrange(storms2,desc(total.damage.dollars)))
View(arrange(storms,desc(PROP_DMG)))
View(arrange(storms,desc(PROPDMG)))
View(arrange(subset(storms,PROPDMGEXP="B",desc(PROPDMG)))
)
View(arrange(subset(storms,PROPDMGEXP=="B",desc(PROPDMG))))
View(arrange(storms,PROPDMGEXP,desc(PROPDMG)))
View(arrange(subset(storms,PROPDMGEXP=="B"),PROPDMGEXP,desc(PROPDMG)))
events.by.damage <- storms2 %>% group_by(EVTYPE) %>% summarise(total.damage.dollars.million=round(sum(total.damage.dollars)/1000000,4)) %>% arrange(desc(total.damage.dollars.million))
top.events.by.damage <- events.by.damage[1:10,]
g <- ggplot(top.events.by.damage,aes(x=reorder(EVTYPE,total.damage.dollars.million),y=total.damage.dollars.million))
g + geom_bar(stat = "identity") + coord_flip() + ylab("Total Damage $Million") + xlab("Storm Event Type")
library(tidyr)
library(tidy)
l <- c("ggplot2","dplyr")
installed.packages()
installed.packages()["Package"]
str(installed.packages())
t <- installed.packages()
str(t)
View(t)
installed.packages()$"Package"
installed.packages()[,"Package"]
t <- installed.packages()[,"Package"]
l
t
l %in% 5
l %in% t
list.of.packages <- ("ggplot2","dplyr","tidyr")
list.of.packages <- c("ggplot2","dplyr","tidyr")
list.of.packages %in% installed.packages()[,"Package"]
?which
which(list.of.packages %in% installed.packages()[,"Package"])
list.of.packages %in% installed.packages()[,"Package"]
!list.of.packages %in% installed.packages()[,"Package"]
not.in.r <- !list.of.packages %in% installed.packages()[,"Package"]
?complete.compare
?completecompare
complete.cases(list.of.packages,not.in.r)
complete.cases(list.of.packages,not.in.r)
list.of.packages[not.in.r]
list.of.packages <- c("ggplot2","dplyr","tidyr","bubml")
not.in.r <- !list.of.packages %in% installed.packages()[,"Package"]
list.of.packages[not.in.r]
install.packages(list.of.packages[not.in.r])
top.events.by.casualties
events.by.casualties <- storms2 %>% group_by(EVTYPE) %>% summarise(total.casualties=sum(FATALITIES) + sum(INJURIES),total.fatalities=sum(FATALITIES),total.injuries=sum(INJURIES)) %>% arrange(desc(total.casualties))
top.events.by.casualties <- events.by.casualties[1:10,]
top.events.by.casualties$EVTYPE
top.events.by.casualties$EVTYPE[1,]
top.events.by.casualties[1,]$EVTYPE
events.by.casualties <- storms2 %>% group_by(EVTYPE) %>% summarise(total.casualties=sum(FATALITIES) + sum(INJURIES),total.fatalities=sum(FATALITIES),total.injuries=sum(INJURIES)) %>% arrange(desc(total.casualties))
top.events.by.casualties <- events.by.casualties[1:10,]
g2 <- ggplot(top.events.by.casualties, aes(x=total.injuries, y=total.fatalities,shape=EVTYPE))
g2 + geom_point()
g2 <- ggplot(top.events.by.casualties, aes(x=total.injuries, y=total.fatalities,colour=EVTYPE))
g2 + geom_point()
storms2 <- select(storms,c(BGN_DATE,EVTYPE,FATALITIES,INJURIES,PROPDMG,PROPDMGEXP,CROPDMG,CROPDMGEXP))
storms2 <- mutate(storms2,event.year=format(strptime(BGN_DATE, "%m/%d/%Y"),"%Y"))
storms_by_year <- group_by(storms2,event.year,events=n())
g <- ggplot(storms_by_year,aes(x=event.year,y=events))
g = geom_line
g <- ggplot(storms_by_year,aes(x=event.year,y=events))
g + geom_line
g + geom_line()
storms_by_year <- summarize(group_by(storms2,event.year),events=n())
storms_by_year
g <- ggplot(storms_by_year,aes(x=event.year,y=events))
g + geom_line()
g <- ggplot(storms_by_year,aes(x=event.year,y=events,group=1))
g + geom_line()
class(storms_by_year$event.year)
as.factor(storms_by_year$event.year)
storms_by_year$event.year <- as.factor(storms_by_year$event.year)
g <- ggplot(storms_by_year,aes(x=event.year,y=events,group=1))
g + geom_line()
g + geom_line()
install.packages("gcookbook")
library(gcookbook)
install.packages("tidyr")
library( gcookbook) # For the data set library( plyr)
Chang, Winston (2012-12-06). R Graphics Cookbook (Kindle Locations 1825-1827). O'Reilly Media. Kindle Edition.
library(gcookbook)
library(ddply)
library(plyr)
uspopage_prop <- ddply( uspopage, "Year", transform, Percent = Thousands / sum( Thousands) * 100)
ggplot( uspopage_prop, aes( x = Year, y = Percent, fill = AgeGroup)) + geom_area( colour =" black", size =. 2, alpha =. 4) + scale_fill_brewer( palette =" Blues", breaks = rev( levels( uspopage $ AgeGroup)))
ggplot(uspopage_prop, aes(x = Year, y = Percent, fill = AgeGroup)) + geom_area( colour ="black", size =. 2, alpha =. 4) + scale_fill_brewer( palette ="Blues", breaks = rev(levels(uspopage$AgeGroup)))
ggplot(uspopage_prop, aes(x = Year, y = Percent, fill = AgeGroup)) + geom_area( colour ="black", size = .2, alpha = .4) + scale_fill_brewer( palette ="Blues", breaks = rev(levels(uspopage$AgeGroup)))
unique(uspopage_prop$year)
uspopage_prop$year
uspopage_prop$Year
class(uspopage_prop$Year)
storms_by_year$event.year <- as.numeric(storms_by_year$event.year)
g <- ggplot(storms_by_year,aes(x=event.year,y=events,group=1))
g + geom_line()
storms_by_year <- summarize(group_by(storms2,as.integer(event.year),events=n()))
storms_by_year <- summarize(group_by(storms2,as.integer(event.year)),events=n())
storms_by_year <- summarize(group_by(storms2,event.year),events=n())
?summarize
detach("package:plyr", unload=TRUE)
storms_by_year <- dplyr.summarize(group_by(storms2,event.year),events=n())
storms_by_year <- dplyr$summarize(group_by(storms2,event.year),events=n())
storms_by_year <- dplyr::summarize(group_by(storms2,event.year),events=n())
storms_by_year$event.year <- as.integer(event.year)
storms_by_year$event.year <- as.integer(storms_by_year$event.year)
storms_by_year
g <- ggplot(storms_by_year,aes(x=event.year,y=events,group=1))
g + geom_line()
g + geom_line() + geom_vline( xintercept = 1996)
storms2 <- select(storms,c(BGN_DATE,EVTYPE,FATALITIES,INJURIES,PROPDMG,PROPDMGEXP,CROPDMG,CROPDMGEXP))
storms2 <- mutate(storms2,event.year=format(strptime(BGN_DATE, "%m/%d/%Y"),"%Y"))
storms2 <- filter(storms2,event.year >= 1996)
storms2 <- mutate(storms2,crop.damage.dollars=ifelse(CROPDMGEXP=="B",CROPDMG*1000000000,ifelse(CROPDMGEXP=="M",CROPDMG*1000000,ifelse(CROPDMGEXP=="K",CROPDMG*1000,CROPDMG))))
storms2 <- mutate(storms2,property.damage.dollars=ifelse(PROPDMGEXP=="B",PROPDMG*1000000000,ifelse(PROPDMGEXP=="M",PROPDMG*1000000,ifelse(PROPDMGEXP=="K",PROPDMG*1000,PROPDMG))))
storms2 <- mutate(storms2,total.damage.dollars=property.damage.dollars+crop.damage.dollars)
View(arrange(subset(storms2,event.year=="2005"),BGN_DATE))
View(arrange(subset(storms2,event.year=="2005" & REFNUM > 577315 & REFNUM <577915 ),BGN_DATE))
View(arrange(subset(storms,format(strptime(BGN_DATE, "%m/%d/%Y"),"%Y")=="2005" & REFNUM > 577315 & REFNUM <577915 ),REFNUM))
View(arrange(subset(storms,format(strptime(BGN_DATE, "%m/%d/%Y"),"%Y")=="2005" & REFNUM > 577315 & REFNUM <577915 ),BGN_DATE))
storms2 <- select(storms,c(BGN_DATE,EVTYPE,FATALITIES,INJURIES,PROPDMG,PROPDMGEXP,CROPDMG,CROPDMGEXP))
storms2 <- mutate(storms2,event.year=format(strptime(BGN_DATE, "%m/%d/%Y"),"%Y"))
storms2 <- filter(storms2,event.year >= 1996)
storms2 <- mutate(storms2,crop.damage.dollars=ifelse(CROPDMGEXP=="B",CROPDMG*1000000000,ifelse(CROPDMGEXP=="M",CROPDMG*1000000,ifelse(CROPDMGEXP=="K",CROPDMG*1000,CROPDMG))))
storms2 <- mutate(storms2,property.damage.dollars=ifelse(PROPDMGEXP=="B",PROPDMG*1000000000,ifelse(PROPDMGEXP=="M",PROPDMG*1000000,ifelse(PROPDMGEXP=="K",PROPDMG*1000,PROPDMG))))
storms2 <- mutate(storms2,total.damage.dollars=property.damage.dollars+crop.damage.dolls)
storms2 <- select(storms,c(BGN_DATE,EVTYPE,FATALITIES,INJURIES,PROPDMG,PROPDMGEXP,CROPDMG,CROPDMGEXP))
storms2 <- mutate(storms2,event.year=format(strptime(BGN_DATE, "%m/%d/%Y"),"%Y"))
storms2 <- filter(storms2,event.year >= 1996)
storms2 <- mutate(storms2,crop.damage.dollars=ifelse(CROPDMGEXP=="B",CROPDMG*1000000000,ifelse(CROPDMGEXP=="M",CROPDMG*1000000,ifelse(CROPDMGEXP=="K",CROPDMG*1000,CROPDMG))))
storms2 <- mutate(storms2,property.damage.dollars=ifelse(PROPDMGEXP=="B",PROPDMG*1000000000,ifelse(PROPDMGEXP=="M",PROPDMG*1000000,ifelse(PROPDMGEXP=="K",PROPDMG*1000,PROPDMG))))
storms2 <- mutate(storms2,total.damage.dollars=property.damage.dollars+crop.damage.dolls)
storms2 <- mutate(storms2,total.damage.dollars=property.damage.dollars+crop.damage.dollars)
storms2 <- filter(storms2,total.damage.dollars<100000000000)
events.by.casualties <- storms2 %>% group_by(EVTYPE) %>% summarise(total.casualties=sum(FATALITIES) + sum(INJURIES),total.fatalities=sum(FATALITIES),total.injuries=sum(INJURIES)) %>% arrange(desc(total.casualties))
View(events.by.casualties)
?to.lower
?lower
events.by.casualties <- storms2 %>% filter(total.casualties>0) %>% group_by(EVTYPE) %>% summarise(total.casualties=sum(FATALITIES) + sum(INJURIES),total.fatalities=sum(FATALITIES),total.injuries=sum(INJURIES)) %>% arrange(desc(total.casualties))
events.by.casualties <- storms2 %>% filter(FATALITIES>0 | INJURIES>0) %>% group_by(EVTYPE) %>% summarise(total.casualties=sum(FATALITIES) + sum(INJURIES),total.fatalities=sum(FATALITIES),total.injuries=sum(INJURIES)) %>% arrange(desc(total.casualties))
events.by.casualties
View(events.by.casualties)
lower(events.by.casualties$EVTYPE)
tolower(events.by.casualties$EVTYPE)
grep("heat",tolower(events.by.casualties$EVTYPE))
grep;("heat",tolower(events.by.casualties$EVTYPE))
grepl("heat",tolower(events.by.casualties$EVTYPE))
?grepl
grepl("heat",tolower(events.by.casualties$EVTYPE),value=TRUE)
grep("heat",tolower(events.by.casualties$EVTYPE),value=TRUE)
events.by.casualties <- storms2 %>% filter(FATALITIES>0 | INJURIES>0) %>% group_by(EVTYPE) %>% summarise(total.casualties=sum(FATALITIES) + sum(INJURIES),total.fatalities=sum(FATALITIES),total.injuries=sum(INJURIES)) %>% arrange(EVTYPE)
View(events.by.casualties)
View(tolower(events.by.casualties$EVTYPE))
grep(tolower(events.by.casualties$EVTYPE),value=TRUE)
grep("tstm"|"thunderstorm",tolower(events.by.casualties$EVTYPE),value=TRUE)
grep("tstm|thunderstorm",tolower(events.by.casualties$EVTYPE),value=TRUE)
grepl("tstm|thunderstorm",tolower(events.by.casualties$EVTYPE))
elseif(grepl("tstm|thunderstorm",tolower(events.by.casualties$EVTYPE)),"tunderstorm wind",
"test")
?elseif
?ifelse
ifelse(grepl("tstm|thunderstorm",tolower(events.by.casualties$EVTYPE)),"tunderstorm wind","test")
mutate(events.by.casualties,ifelse(grepl("tstm|thunderstorm",tolower(events.by.casualties$EVTYPE)),"tunderstorm wind","test"))
View(mutate(events.by.casualties,evtypeclean=ifelse(grepl("tstm|thunderstorm",tolower(events.by.casualties$EVTYPE)),"tunderstorm wind","test")))
View(mutate(events.by.casualties,evtypeclean=ifelse(grepl("^[not]tstm|thunderstorm",tolower(events.by.casualties$EVTYPE)),"tunderstorm wind","test")))
View(mutate(events.by.casualties,evtypeclean=ifelse(grepl("^[^not]tstm|thunderstorm",tolower(events.by.casualties$EVTYPE)),"tunderstorm wind","test")))
storms2 <- mutate(storms2,event.type=gsub("/"," ",tolower(EVTYPE))
mutate(storms2,event.type=gsub("/"," ",tolower(EVTYPE)))
unique(storms2$EVTYPE)
View(unique(storms2$EVTYPE))
storms2 <- mutate(storms2,event.type=tolower(EVTYPE))
storms2 <- mutate(storms2,crop.damage.dollars=ifelse(CROPDMGEXP=="B",CROPDMG*1000000000,ifelse(CROPDMGEXP=="M",CROPDMG*1000000,ifelse(CROPDMGEXP=="K",CROPDMG*1000,CROPDMG))))
storms2 <- mutate(storms2,property.damage.dollars=ifelse(PROPDMGEXP=="B",PROPDMG*1000000000,ifelse(PROPDMGEXP=="M",PROPDMG*1000000,ifelse(PROPDMGEXP=="K",PROPDMG*1000,PROPDMG))))
storms2 <- mutate(storms2,total.damage.dollars=property.damage.dollars+crop.damage.dollars)
##Remove entry with Napa Valley 2005 flood with over 100 Billion dollars damage coded (upon review of remarks in source file, this is obviously a mistake)
storms2 <- filter(storms2,total.damage.dollars<100000000000)
events.summary <- storms2 %>% group_by(event.type) %>% summarise(total.casualties=sum(FATALITIES) + sum(INJURIES),total.fatalities=sum(FATALITIES),total.injuries=sum(INJURIES),total.damage.dollars.million=round(sum(total.damage.dollars)/1000000,4))
events.summary
mutate(events.summary,ifelse(grepl("tstm|thunderstorm",event.type,"tunderstorm wind","test"))
)
mutate(events.summary,ifelse(grepl("tstm|thunderstorm",event.type),"tunderstorm wind","test")))
mutate(events.summary,event.type.clean=ifelse(grepl("tstm|thunderstorm",event.type),"tunderstorm wind","test")))
mutate(events.summary,event.type.clean=ifelse(grepl("tstm|thunderstorm",event.type),"tunderstorm wind","test"))
View(mutate(events.summary,event.type.clean=ifelse(grepl("tstm|thunderstorm",event.type),"tunderstorm wind","test")))
events.summary <- storms2 %>% group_by(event.type) %>% summarise(total.casualties=sum(FATALITIES) + sum(INJURIES),total.fatalities=sum(FATALITIES),total.injuries=sum(INJURIES),total.damage.dollars.million=round(sum(total.damage.dollars)/1000000,4)) %>% filter(total.casualties>0 & total.damage.dollars.million>0)
View(mutate(events.summary,event.type.clean=ifelse(grepl("tstm|thunderstorm",event.type),"tunderstorm wind","test")))
View(arrange(events.summary,desc(total.damage.dollars.million))
)
events.summary <- mutate(events.summary,event.type.clean = ifelse(grepl("typhoon"|"hurricane",event.type),"hurricane",ifelse(grepl("storm surge",event.type),"storm surge/tide")))
grepl("typhoon"|"hurricane",events.summary$event.type)
grepl("typhoon|hurricane",events.summary$event.type)
mutate(events.summary,event.type.clean = ifelse(grepl("typhoon|hurricane",event.type),"hurricane",ifelse(grepl("storm surge",event.type),"storm surge/tide",ifelse(grepl("fire",event.type),"wildfire",ifelse(grepl("marine tstm|marine thunderstorm",event.type),"marine thunderstorm wind",ifelse(grepl("tstm|thunderstorm",event.type),"thunderstorm wind",event.type))))))
events.summary <- mutate(events.summary,event.type.clean = ifelse(grepl("typhoon|hurricane",event.type),"hurricane",ifelse(grepl("storm surge",event.type),"storm surge/tide",ifelse(grepl("fire",event.type),"wildfire",ifelse(grepl("marine tstm|marine thunderstorm",event.type),"marine thunderstorm wind",ifelse(grepl("tstm|thunderstorm",event.type),"thunderstorm wind",event.type))))))
event.summary <- group_by(event.type.clean) %>%> summarise(total.casualties=sum(total.casualties),total.fatalities=sum(total.fatalities),total.injuries=sum(total.injuries),total.damage.dollars.million=sum(total.damage.dollars.million))
event.summary <- group_by(event.type.clean) %>% summarise(total.casualties=sum(total.casualties),total.fatalities=sum(total.fatalities),total.injuries=sum(total.injuries),total.damage.dollars.million=sum(total.damage.dollars.million))
events.summary <- mutate(events.summary,event.type.clean = ifelse(grepl("typhoon|hurricane",event.type),"hurricane",ifelse(grepl("storm surge",event.type),"storm surge/tide",ifelse(grepl("fire",event.type),"wildfire",ifelse(grepl("marine tstm|marine thunderstorm",event.type),"marine thunderstorm wind",ifelse(grepl("tstm|thunderstorm",event.type),"thunderstorm wind",event.type))))))
events.summary <- events.summary %>% group_by(event.type.clean) %>% summarise(total.casualties=sum(total.casualties),total.fatalities=sum(total.fatalities),total.injuries=sum(total.injuries),total.damage.dollars.million=sum(total.damage.dollars.million))
View(arrange(events.summary,desc(total.damage.dollars.million)))
events.summary <- storms2 %>% mutate(events.summary,event.type.clean = ifelse(grepl("typhoon|hurricane",event.type),"hurricane",ifelse(grepl("storm surge",event.type),"storm surge/tide",ifelse(grepl("fire",event.type),"wildfire",ifelse(grepl("marine tstm|marine thunderstorm",event.type),"marine thunderstorm wind",ifelse(grepl("tstm|thunderstorm",event.type),"thunderstorm wind",event.type)))))) %>%   group_by(event.type) %>% summarise(total.casualties=sum(FATALITIES) + sum(INJURIES),total.fatalities=sum(FATALITIES),total.injuries=sum(INJURIES),total.damage.dollars.million=round(sum(total.damage.dollars)/1000000,4)) %>% filter(total.casualties>0 & total.damage.dollars.million>0)
events.summary <- mutate(events.summary,event.type.clean = ifelse(grepl("typhoon|hurricane",event.type),"hurricane",ifelse(grepl("storm surge",event.type),"storm surge/tide",ifelse(grepl("fire",event.type),"wildfire",ifelse(grepl("marine tstm|marine thunderstorm",event.type),"marine thunderstorm wind",ifelse(grepl("tstm|thunderstorm",event.type),"thunderstorm wind",event.type))))))
events.summary <- events.summary %>% group_by(event.type.clean) %>% summarise(total.casualties=sum(total.casualties),total.fatalities=sum(total.fatalities),total.injuries=sum(total.injuries),total.damage.dollars.million=sum(total.damage.dollars.million))
events.summary <- storms2 %>% summarise(total.casualties=sum(FATALITIES) + sum(INJURIES),total.fatalities=sum(FATALITIES),total.injuries=sum(INJURIES),total.damage.dollars.million=round(sum(total.damage.dollars)/1000000,4)) %>% filter(total.casualties>0 & total.damage.dollars.million>0)
events.summary <- mutate(events.summary,event.type.clean = ifelse(grepl("typhoon|hurricane",event.type),"hurricane",ifelse(grepl("storm surge",event.type),"storm surge/tide",ifelse(grepl("fire",event.type),"wildfire",ifelse(grepl("marine tstm|marine thunderstorm",event.type),"marine thunderstorm wind",ifelse(grepl("tstm|thunderstorm",event.type),"thunderstorm wind",event.type))))))
events.summary <- events.summary %>% group_by(event.type.clean) %>% summarise(total.casualties=sum(total.casualties),total.fatalities=sum(total.fatalities),total.injuries=sum(total.injuries),total.damage.dollars.million=sum(total.damage.dollars.million))
events.summary <- storms2 %>% summarise(total.casualties=sum(FATALITIES) + sum(INJURIES),total.fatalities=sum(FATALITIES),total.injuries=sum(INJURIES),total.damage.dollars.million=round(sum(total.damage.dollars)/1000000,4)) %>% filter(total.casualties>0 & total.damage.dollars.million>0)
events.summary <- storms2 %>% group_by(event.type) %>% summarise(total.casualties=sum(FATALITIES) + sum(INJURIES),total.fatalities=sum(FATALITIES),total.injuries=sum(INJURIES),total.damage.dollars.million=round(sum(total.damage.dollars)/1000000,4)) %>% filter(total.casualties>0 & total.damage.dollars.million>0)
events.summary <- mutate(events.summary,event.type.clean = ifelse(grepl("typhoon|hurricane",event.type),"hurricane",ifelse(grepl("storm surge",event.type),"storm surge/tide",ifelse(grepl("fire",event.type),"wildfire",ifelse(grepl("marine tstm|marine thunderstorm",event.type),"marine thunderstorm wind",ifelse(grepl("tstm|thunderstorm",event.type),"thunderstorm wind",event.type))))))
events.summary <- events.summary %>% group_by(event.type.clean) %>% summarise(total.casualties=sum(total.casualties),total.fatalities=sum(total.fatalities),total.injuries=sum(total.injuries),total.damage.dollars.million=sum(total.damage.dollars.million))
top.events.by.casualties <- arrange(events.summary,desc(total.casualties)[1:10,]
top.events.by.casualties <- arrange(events.summary,desc(total.casualties))[1:10,]
top.events.by.casualties
library(tidyr)
melt(top.events.by.casualties,id="event.type.clean")
?melt
library(reshape2)
melt(top.events.by.casualties,id="event.type.clean")
top.events.by.casualties <- events.summary %>% select(-total.damage.dollars.million) %>% arrange(,desc(total.casualties))[1:10,]
top.events.by.casualties <- events.summary %>% select(-total.damage.dollars.million) %>% arrange(desc(total.casualties))[1:10,]
melt(top.events.by.casualties,id=c("event.type.clean","total.casualties")
)
top.events.by.casualties
events.summary %>% select(-total.damage.dollars.million) %>% arrange(desc(total.casualties))[1:10,]
events.summary
events.summary %>% select(-total.damage.dollars.million)
events.summary %>% select(-total.damage.dollars.million) %>% arrange(desc(total.casualties))
events.summary %>% select(-total.damage.dollars.million) %>% arrange(desc(total.casualties))[1:10,]
top.events.by.casualties <- events.summary %>% select(-total.damage.dollars.million) %>% arrange(desc(total.casualties))
melt(top.events.by.casualties[1:10,],id=c("event.type.clean","total.casualties"))
top.events.by.casualties <- melt(top.events.by.casualties[1:10,],id=c("event.type.clean","total.casualties"))
g <- ggplot(top.events.by.casualties, aes(x=reorder(event.type.clean,total.casualties),y=value,colour=variable))
g + geom_bar(stat = "identity") + coord_flip()
g + geom_bar(stat = "identity") + coord_flip()
g <- ggplot(top.events.by.casualties, aes(x=reorder(event.type.clean,total.casualties),y=value,fill=variable))
g + geom_bar(stat = "identity") + coord_flip() + ylab("Total Casualties (injuries and fatalities)") + xlab("Storm Event Type")
g + geom_bar(stat = "identity") + coord_flip() + ylab("Total Casualties (injuries and fatalities)") + xlab("Storm Event Type")+ labs(fill = "Casualty")
g + geom_bar(stat = "identity") + coord_flip() + ylab("Total Casualties (injuries and fatalities)") + xlab("Storm Event Type")+ labs(fill = "Casualty") + scale_fill_discrete(labels = c("Fatalities", "Injuries"))
top.events.by.economic.damage <- arrange(event.summary,totaldesc(total.damage.dollars.million))[1:10,]
top.events.by.economic.damage <- arrange(event.summary,totaldesc(total.damage.dollars.million))[1:10,]
top.events.by.economic.damage <- arrange(events.summary,totaldesc(total.damage.dollars.million))[1:10,]
top.events.by.economic.damage <- arrange(events.summary,desc(total.damage.dollars.million))[1:10,]
top.events.by.damage <- arrange(events.summary,totaldesc(total.damage.dollars.million))[1:10,]
top.events.by.damage <- arrange(events.summary,desc(total.damage.dollars.million))[1:10,]
g <- ggplot(top.events.by.damage,aes(x=reorder(event.type.clean,total.damage.dollars.million),y=total.damage.dollars.million))
g + geom_bar(stat = "identity") + coord_flip() + ylab("Total Damage ($ Million)") + xlab("Storm Event Type")
